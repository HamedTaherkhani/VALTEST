Extracting testcases and running them...
Unsupported comparison operator in assertion: assert find_solution(1, 1, 3) is None
Unsupported comparison operator in assertion: assert find_solution(2, 3, 5) is None
Saving processed functions to unfiltered_testcases/MBPP_llama3_processed.pkl...
403
403
{'input_mean': 23.535, 'input_max': 27.89, 'input_min': 19.18, 'input_sum': 47.07, 'input_total': 2, 'input_variance': 18.966025000000005, 'output_mean': 99.85, 'output_max': 99.85, 'output_min': 99.85, 'output_sum': 99.85, 'output_total': 1, 'output_variance': 0.0, 'second_output_mean': 0.14, 'second_output_max': 0.14, 'second_output_min': 0.14, 'second_output_sum': 0.14, 'second_output_total': 1, 'second_output_variance': 0.0, 'second_input_mean': 16.97, 'second_input_max': 20.85, 'second_input_min': 13.09, 'second_input_sum': 33.94, 'second_input_total': 2, 'second_input_variance': 15.054400000000006, 'is_valid': 1, 'function_id': 0}
Sample feature: {'input_mean': 23.535, 'input_max': 27.89, 'input_min': 19.18, 'input_sum': 47.07, 'input_total': 2, 'input_variance': 18.966025000000005, 'output_mean': 99.85, 'output_max': 99.85, 'output_min': 99.85, 'output_sum': 99.85, 'output_total': 1, 'output_variance': 0.0, 'second_output_mean': 0.14, 'second_output_max': 0.14, 'second_output_min': 0.14, 'second_output_sum': 0.14, 'second_output_total': 1, 'second_output_variance': 0.0, 'second_input_mean': 16.97, 'second_input_max': 20.85, 'second_input_min': 13.09, 'second_input_sum': 33.94, 'second_input_total': 2, 'second_input_variance': 15.054400000000006, 'is_valid': 1, 'function_id': 0}
79.48493584230211    95.66422875985576    9.480218080884537    2.951923068405214
81.63811422062489   86.46833716987112    8.220114354050043    6.706839361095977
Balanced dataset size - Number of valid testcases: 2382
Balanced dataset size - Number of invalid testcases: 2079
Valid Testcase Ratio" 0.53
calculating initial coverage of the functions and mutation score....
The total number of tests for mutation testing: 2382
running mutation testing...
Running pytest to check tests...
All tests passed.

Final Mutation Testing Results:
Total mutants: 2590
Killed mutants: 1854
Survived mutants: 703
Timeout mutants: 32
Suspicious mutants: 1
Overall Mutation Score: 0.72%
Initial coverage:
0.959

Training and evaluating model: ensemble
[LightGBM] [Info] Number of positive: 1936, number of negative: 1632
[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.002799 seconds.
You can set `force_row_wise=true` to remove the overhead.
And if memory is not enough, you can set `force_col_wise=true`.
[LightGBM] [Info] Total Bins 5127
[LightGBM] [Info] Number of data points in the train set: 3568, number of used features: 24
[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.542601 -> initscore=0.170818
[LightGBM] [Info] Start training from score 0.170818
[LightGBM] [Info] Number of positive: 1962, number of negative: 1607
[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000402 seconds.
You can set `force_row_wise=true` to remove the overhead.
And if memory is not enough, you can set `force_col_wise=true`.
[LightGBM] [Info] Total Bins 5105
[LightGBM] [Info] Number of data points in the train set: 3569, number of used features: 24
[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.549734 -> initscore=0.199595
[LightGBM] [Info] Start training from score 0.199595
[LightGBM] [Info] Number of positive: 1893, number of negative: 1676
[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000414 seconds.
You can set `force_row_wise=true` to remove the overhead.
And if memory is not enough, you can set `force_col_wise=true`.
[LightGBM] [Info] Total Bins 5107
[LightGBM] [Info] Number of data points in the train set: 3569, number of used features: 24
[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.530401 -> initscore=0.121753
[LightGBM] [Info] Start training from score 0.121753
[LightGBM] [Info] Number of positive: 1841, number of negative: 1728
[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000582 seconds.
You can set `force_row_wise=true` to remove the overhead.
And if memory is not enough, you can set `force_col_wise=true`.
[LightGBM] [Info] Total Bins 5117
[LightGBM] [Info] Number of data points in the train set: 3569, number of used features: 24
[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.515831 -> initscore=0.063344
[LightGBM] [Info] Start training from score 0.063344
[LightGBM] [Info] Number of positive: 1896, number of negative: 1673
[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000430 seconds.
You can set `force_row_wise=true` to remove the overhead.
And if memory is not enough, you can set `force_col_wise=true`.
[LightGBM] [Info] Total Bins 5115
[LightGBM] [Info] Number of data points in the train set: 3569, number of used features: 24
[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.531241 -> initscore=0.125128
[LightGBM] [Info] Start training from score 0.125128
Model: ensemble
Threshold: 0.8
=== Selection Statistics ===
Total selected instances: 1876
The ratio valid test cases: 0.592
============================
Calculating coverage and mutation score using filtered test cases...
The total number of tests for mutation testing: 1111
running mutation testing...
Running pytest to check tests...
All tests passed.

Final Mutation Testing Results:
Total mutants: 2313
Killed mutants: 1512
Survived mutants: 769
Timeout mutants: 29
Suspicious mutants: 3
Overall Mutation Score: 0.65%
{'ensemble': {'coverage': 0.949, 'total_selected': 1876, 'valid_test_case_ration': 0.592}}
Saving filtered functions to filtered_testcases/MBPP_llama3.pkl...
